%% ======================================================================== FULL DATA SET (288 obs per day) ===================

load FULL_IMPUTED.mat
ds_full = NedocData(TI_full,288);
ds_full = ds_full.setToday(0.99);
ds_full = ds_full.setPPD(48);

%% ======================================================================== DAY CURVE TRANSFORM ===============================
% getmats
[~,yimp] = ds_full.getmats('all','time');
ppd = ds_full.PPD;

x = (1:ppd)';
y = zeros([ds_full.L/ppd,ppd]);
for i = 1:48:length(yimp)-(ppd-1)
    y((i+47)/48,:) = yimp(i:i+(ppd-1));
end

% fits
transform = [x.^0,...
    sin(x*2*pi/ppd), cos(x*2*pi/ppd),...
    sin(x*2*pi/(ppd/2)), cos(x*2*pi/(ppd/2)),...
    sin(x*2*pi/(ppd/4)), cos(x*2*pi/(ppd/4)),...
    sin(x*2*pi/(ppd/8)), cos(x*2*pi/(ppd/8))     ];
y_trans = zeros([size(y,1),size(transform,2)]);

for i = 1:size(y,1)
    y_trans(i,:) = normalEqn(transform,y(i,:)');
end

%% ======================================================================== TRAIN ARCRIN ======================================
M = height(ds_full.T_imp) / ppd;
lags

[crnet, mu, sig, Xcell] = trainCRNet_DC(data_store,lags,y_trans);   % Xr is standardized lag matrix
coeff_pred_std = predict( crnet, Xcell, "ExecutionEnvironment",'gpu', "MiniBatchSize", max(lags)*9 );
coeff_pred_std = cast(coeff_pred_std,"double");
coeff_pred_std = [zeros([ppd-size(coeff_pred_std,1) , size(coeff_pred_std,2)]) ; coeff_pred_std];
coeff_pred = sig .* coeff_pred_std + mu;

daypred = coeff_pred * X';
y_prediction = reshape(daypred', [], 1);



